pipeline {
  agent any
  
  environment {
    AWS_ACCESS_KEY_ID = credentials('sai')
    AWS_SECRET_ACCESS_KEY = credentials('sai')
  }
  
  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/your-repo.git'
      }
    }
    
    stage('Create Terraform Workspace') {
      steps {
        script {
          def workspace = "${params.ENVIRONMENT}"
          // Check if the Terraform workspace exists
          def workspaceExists = sh(script: "terraform workspace list | grep -wq $workspace", returnStatus: true)
          
          if (workspaceExists != 0) {
            // Create the Terraform workspace if it doesn't exist
            sh "terraform workspace new $workspace"
          }
        }
      }
    }
    
    stage('Terraform Init') {
      steps {
        script {
          def workspace = "${params.ENVIRONMENT}"
          dir(workspace) {
            // Switch to the selected workspace and initialize Terraform
            sh "terraform workspace select $workspace"
            sh "terraform init"
          }
        }
      }
    }
    
    stage('Terraform Plan') {
      steps {
        script {
          def workspace = "${params.ENVIRONMENT}"
          dir(workspace) {
            // Execute Terraform plan for the selected workspace
            sh "terraform plan"
          }
        }
      }
    }
    
    stage('Terraform Apply') {
      steps {
        script {
          def workspace = "${params.ENVIRONMENT}"
          dir(workspace) {
            // Apply the changes and create the S3 bucket for the selected workspace
            sh "terraform apply -auto-approve"
          }
        }
      }
    }
  }
}
